SCRIPT_DESCRIPTION


SCRIPT_AUTHOR
r.bancal

SCRIPT_GROUPS
SANITYCHECK TESTS 

SCRIPT_START

	chapter -> ***** Step offloading TEST ***** -> Web production process -> 

	callScript -> scripts.ResetProductionRules -> [ ltf-production-rules@framboise.com , !Lectra33! ] -> 

	channel -> start -> prodprocess -> https://cutting-room-production-process.dev.mylectra.com/ -> {"overspec":{"keepSizeAndPosition":false,"fullScreen":true,"protocol":"WEB"}}

	callScript -> subscript.Login -> [ ltf-production-rules@framboise.com , !Lectra33! ] -> 

	callScript -> subscript.activity_list.WaitForActivityListLoad -> [  ] -> 

	callScript -> subscript.activity_list.CheckActivityEnabledState -> [ assist-offloading , true ] -> 

	comment1 -> Initial state : two checkboxes unclicked

	callScript -> subscript.activity_list.SelectActivity -> [ assist-offloading ] -> 

	paragraph -> Check all options in conditional list of step MTM

	callScript -> subscript.step_offloading.CheckLeftOperands -> [  ] -> 

	paragraph -> Test edit mode and cancel

	callScript -> subscript.ribbon.ClickEdit -> [  ] -> 

	callScript -> subscript.result_block.CheckPickerValue -> [ Default-OffloadingRules , offloading-rule , 0 ] -> 

	callScript -> subscript.result_block.SetPickerEmpty -> [ offloading-rule , 0 ] -> 

	comment1 -> Check offloading rule is mandatory : empty picker is in error

	callScript -> subscript.activity_list.CheckActivityInError -> [ assist-offloading ] -> 

	callScript -> subscript.result_block.SetPickerValue -> [ MyBeautifulOffloadingRule , offloading-rule , 0 ] -> 

	callScript -> subscript.activity_list.CheckActivityEditedState -> [ assist-offloading , true ] -> 

	callScript -> subscript.ribbon.ClickCancel -> [  ] -> 

	callScript -> subscript.activity_list.CheckActivityEditedState -> [ assist-offloading , false ] -> 

	paragraph -> Add conditional block with two conditions

	callScript -> subscript.ribbon.ClickEdit -> [  ] -> 

	callScript -> subscript.conditions.AddFirstCondition -> [  ] -> 

	callScript -> subscript.activity_list.CheckActivityInError -> [ assist-offloading ] -> 

	callScript -> subscript.conditions.FillCondition -> [ 0-0 , product.family , Different , DadJeans ] -> 

	callScript -> subscript.conditions.AddCondition -> [ 0-0 ] -> 

	callScript -> subscript.conditions.FillCondition -> [ 0-1 , material.reference , Contains , stripe ] -> 

	callScript -> subscript.conditions.AddCondition -> [ 0-1 ] -> 

	callScript -> subscript.conditions.FillConditionList -> [ 0-2 , material.nestingFamily , Equals , INest ] -> 

	paragraph -> Add another conditional block

	callScript -> subscript.conditions.AddCondition -> [ else ] -> 

	callScript -> subscript.conditions.FillCondition -> [ 1-0 , batch.reference , Equals , pool-1 ] -> 

	callScript -> subscript.result_block.SetPickerValue -> [ MyBeautifulOffloadingRule , offloading-rule , 0 ] -> 

	callScript -> subscript.result_block.SetPickerValue -> [ 读写汉字&space;-&space;学中文 , offloading-rule , 1 ] -> 
	
	callScript -> subscript.ribbon.ClickSave -> [  ] -> 

	paragraph -> Check state of activity after saving

	callScript -> subscript.activity_list.CheckActivityEditedState -> [ assist-offloading , false ] -> 

	callScript -> subscript.conditions.CheckCondition -> [ 0-0 , product.family , Different , DadJeans ] -> 

	callScript -> subscript.conditions.CheckCondition -> [ 0-1 , material.reference , Contains , stripe ] -> 

	callScript -> subscript.conditions.CheckConditionList -> [ 0-2 , material.nestingFamily , Equals , INest ]

	callScript -> subscript.conditions.CheckCondition -> [ 1-0 , batch.reference , Equals , pool-1 ] -> 

	callScript -> subscript.result_block.CheckPickerValue -> [ MyBeautifulOffloadingRule , offloading-rule , 0 ] -> 

	callScript -> subscript.result_block.CheckPickerValue -> [ 读写汉字&space;-&space;学中文 , offloading-rule , 1 ] -> 

	callScript -> subscript.result_block.CheckPickerValue -> [ Default-OffloadingRules , offloading-rule , 2 ] -> 

	paragraph -> Test online help

	callScript -> subscript.ribbon.CheckOnlineHelp -> [ assist-offloading , offloading-rule ] -> 

	channel -> close -> prodprocess

	comment1 -> Test sucess !
