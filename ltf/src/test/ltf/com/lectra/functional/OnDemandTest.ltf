SCRIPT_DESCRIPTION


SCRIPT_AUTHOR
r.bancal

SCRIPT_GROUPS
SANITYCHECK TESTS 

SCRIPT_START

	chapter -> ***** On demand user TEST ***** -> Web production process -> 

	callScript -> scripts.ResetProductionRules -> [ production-rules-ondemand@ltf-framboise.com , !Lectra33! ] -> 

	channel -> start -> prodprocess -> https://cutting-room-production-process.dev.mylectra.com/ -> {"overspec":{"fullScreen":true,"keepSizeAndPosition":false,"protocol":"WEB"}}

	callScript -> subscript.Login -> [ production-rules-ondemand@ltf-framboise.com , !Lectra33! ] -> 

	callScript -> subscript.activity_list.WaitForActivityListLoad -> [  ] -> 

	paragraph -> Check differences in rule existence

	comment1 -> Check Marker plan generation step does not exist

	check -> exists = false -> a [ data-xname = generate-section-plan ]

	comment1 -> Check Spread plan generation step does not exist

	check -> exists = false -> a [ data-xname = generate-spreading-plan ]

	comment1 -> Check Plot step does not exist

	check -> exists = false -> a [ data-xname = plot ]

	paragraph -> Check Combine Orders option in Step Cutting Order generation

	callScript -> subscript.activity_list.SelectActivity -> [ generate-cutting-order ] -> 

	callScript -> subscript.ribbon.ClickEdit -> [  ] -> 

	callScript -> subscript.result_block.ChangeListValue -> [ 2 , cuttingOrderProductGroupingOD , 0 ] -> 

	callScript -> subscript.result_block.ChangeItemSwitcher -> [ Yes , canCombineCuttingOrders , 0 ] -> 

	comment1 -> Check disabled fields if checkboxes not checked

	callScript -> subscript.result_block.ClickCheckbox -> [ enableProductDistributionPerCuttingOrder , 0 ] -> 

	check -> disabled = true -> input [ data-xlabel = productDistributionPerCuttingOrderMaxNumberOD ]

	check -> exists = true -> ul [ data-testid = productDistributionPerCuttingOrder ] -> div [ disabled =  ]

	callScript -> subscript.result_block.ClickCheckbox -> [ enableProductDistributionPerNestingGroup , 0 ] -> 

	check -> disabled = true -> input [ data-xlabel = productDistributionPerNestingGroupMaxNumberOD ]

	//check -> exists = true -> ul [ data-testid = productDistributionPerNestingGroup ] -> div [ disabled =  ]

	callScript -> subscript.result_block.ClickCheckbox -> [ enableProductDistributionPerCuttingOrder , 0 ] -> 

	callScript -> subscript.result_block.ClickCheckbox -> [ enableProductDistributionPerNestingGroup , 0 ] -> 

	comment1 -> Check Error if productDistributionPerCuttingOrderMaxNumberOD is  not greater than productDistributionPerNestingGroupMaxNumberOD

	callScript -> subscript.result_block.FillInput -> [ 5 , productDistributionPerCuttingOrderMaxNumberOD , 0 ] -> 

	callScript -> subscript.result_block.FillInput -> [ 6 , productDistributionPerNestingGroupMaxNumberOD , 0 ] -> 

	callScript -> subscript.activity_list.CheckActivityInError -> [ generate-cutting-order ] -> 

	callScript -> subscript.result_block.FillInput -> [ 11 , productDistributionPerCuttingOrderMaxNumberOD , 0 ] -> 

	callScript -> subscript.activity_list.CheckNoError -> [  ] -> 

	callScript -> subscript.ribbon.ClickSave -> [  ] -> 

	paragraph -> Check differences in rule conditions

	comment1 -> In step Marker Generation, condition on Spread Family is not displayed

	callScript -> subscript.activity_list.SelectActivity -> [ generate-marker ] -> 

	callScript -> subscript.ribbon.ClickEdit -> [  ] -> 

	callScript -> subscript.conditions.AddFirstCondition -> [  ] -> 

	callScript -> subscript.conditions.UnfoldList -> [ 0-0 , left-operand ] -> 

	check -> exists = false -> div [ data-testid = material.spreadingFamily ]

	callScript -> subscript.ribbon.ClickCancel -> [  ] -> 

	comment1 -> In step Roll Assignment, condition on Spreader Ply Count is not displayed

	callScript -> subscript.activity_list.SelectActivity -> [ after-nesting-roll-allocation ] -> 

	callScript -> subscript.ribbon.ClickEdit -> [  ] -> 

	callScript -> subscript.conditions.AddFirstCondition -> [  ] -> 

	callScript -> subscript.conditions.UnfoldList -> [ 0-0 , left-operand ] -> 

	check -> exists = false -> div [ data-testid = spreader.plyCount ]

	callScript -> subscript.ribbon.ClickCancel -> [  ] -> 

	comment1 -> In step Requirements, condition on Spreader Ply Count is not displayed

	callScript -> subscript.activity_list.SelectActivity -> [ associate-cutting-requirements ] -> 

	callScript -> subscript.ribbon.ClickEdit -> [  ] -> 

	callScript -> subscript.conditions.AddFirstCondition -> [  ] -> 

	callScript -> subscript.conditions.UnfoldList -> [ 0-0 , left-operand ] -> 

	check -> exists = false -> div [ data-testid = spreader.plyCount ]

	callScript -> subscript.ribbon.ClickCancel -> [  ] -> 

	comment1 -> In step Activities, condition on Spreader Ply Count is not displayed

	callScript -> subscript.activity_list.SelectActivity -> [ associate-cutting-activities ] -> 

	callScript -> subscript.ribbon.ClickEdit -> [  ] -> 

	callScript -> subscript.conditions.AddFirstCondition -> [  ] -> 

	callScript -> subscript.conditions.UnfoldList -> [ 0-0 , left-operand ] -> 

	check -> exists = false -> div [ data-testid = spreader.plyCount ]

	callScript -> subscript.ribbon.ClickCancel -> [  ] -> 

	comment1 -> In step Publishing, condition on Spreader PlyCount and about WorkOrders are not displayed

	callScript -> subscript.activity_list.SelectActivity -> [ publish ] -> 

	callScript -> subscript.ribbon.ClickEdit -> [  ] -> 

	callScript -> subscript.conditions.AddFirstCondition -> [  ] -> 

	callScript -> subscript.conditions.UnfoldList -> [ 0-0 , left-operand ] -> 

	check -> exists = false -> div [ data-testid = spreader.plyCount ]

	check -> exists = false -> div [ data-testid = workorder.backlogId ]

	check -> exists = false -> div [ data-testid = workorder.cutterId ]

	check -> exists = false -> div [ data-testid = workorder.spreaderId ]

	callScript -> subscript.ribbon.ClickCancel -> [  ] -> 

	paragraph -> Test online help on production line step

	callScript -> subscript.ribbon.CheckOnlineHelpLabel -> [ affect-cutting-line ] -> 

	channel -> close -> prodprocess

	comment1 -> Test sucess !
